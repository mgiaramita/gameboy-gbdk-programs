                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Fri Sep 15 00:48:23 2017
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc159920
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _leftwalk
                             13 	.globl _setDefaultSprite
                             14 	.globl _walkLoop
                             15 ;--------------------------------------------------------
                             16 ; special function registers
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; special function bits 
                             20 ;--------------------------------------------------------
                             21 ;--------------------------------------------------------
                             22 ; internal ram data
                             23 ;--------------------------------------------------------
                             24 	.area _DATA
   0000                      25 _leftwalk::
   0000                      26 	.ds 128
                             27 ;--------------------------------------------------------
                             28 ; overlayable items in internal ram 
                             29 ;--------------------------------------------------------
                             30 	.area _OVERLAY
                             31 ;--------------------------------------------------------
                             32 ; indirectly addressable internal ram data
                             33 ;--------------------------------------------------------
                             34 	.area _ISEG
                             35 ;--------------------------------------------------------
                             36 ; bit data
                             37 ;--------------------------------------------------------
                             38 	.area _BSEG
                             39 ;--------------------------------------------------------
                             40 ; external ram data
                             41 ;--------------------------------------------------------
                             42 	.area _XSEG
                             43 ;--------------------------------------------------------
                             44 ; global & static initialisations
                             45 ;--------------------------------------------------------
                             46 	.area _GSINIT
                             47 	.area _GSFINAL
                             48 	.area _GSINIT
                             49 ;	spritedemo.c 26
                             50 ;	spritedemo.c 69
                             51 ;	genArrayInit
                             52 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0000 21 00 00             53 	ld	hl,#_leftwalk
   0003 CD 00 00             54 	call	__initrleblock
   0006 7F                   55 	.db	127
   0007 00 00 0F 0F 18 1F    56 	.db	0x00, 0x00, 0x0F, 0x0F, 0x18, 0x1F, 0x7F, 0x7F
        7F 7F
   000F 1F 15 1F 14 1F 14    57 	.db	0x1F, 0x15, 0x1F, 0x14, 0x1F, 0x14, 0x7F, 0x61
        7F 61
   0017 3F 21 1F 1C 0B 0F    58 	.db	0x3F, 0x21, 0x1F, 0x1C, 0x0B, 0x0F, 0x0B, 0x0E
        0B 0E
   001F 0B 0E 1F 1F 24 3F    59 	.db	0x0B, 0x0E, 0x1F, 0x1F, 0x24, 0x3F, 0x3F, 0x3F
        3F 3F
   0027 00 00 E0 E0 10 F0    60 	.db	0x00, 0x00, 0xE0, 0xE0, 0x10, 0xF0, 0x08, 0xF8
        08 F8
   002F F8 C8 F8 68 F8 58    61 	.db	0xF8, 0xC8, 0xF8, 0x68, 0xF8, 0x58, 0xF8, 0xD8
        F8 D8
   0037 F8 38 F0 B0 C0 C0    62 	.db	0xF8, 0x38, 0xF0, 0xB0, 0xC0, 0xC0, 0xC0, 0x40
        C0 40
   003F C0 40 C0 C0 40 C0    63 	.db	0xC0, 0x40, 0xC0, 0xC0, 0x40, 0xC0, 0xC0, 0xC0
        C0 C0
   0047 00 00 0F 0F 18 1F    64 	.db	0x00, 0x00, 0x0F, 0x0F, 0x18, 0x1F, 0x7F, 0x7F
        7F 7F
   004F 1F 15 1F 14 1F 14    65 	.db	0x1F, 0x15, 0x1F, 0x14, 0x1F, 0x14, 0x7F, 0x61
        7F 61
   0057 3F 21 1F 1C 0B 0F    66 	.db	0x3F, 0x21, 0x1F, 0x1C, 0x0B, 0x0F, 0x0B, 0x0E
        0B 0E
   005F 0B 0E 0F 0F 11 1F    67 	.db	0x0B, 0x0E, 0x0F, 0x0F, 0x11, 0x1F, 0x1F, 0x1F
        1F 1F
   0067 00 00 E0 E0 10 F0    68 	.db	0x00, 0x00, 0xE0, 0xE0, 0x10, 0xF0, 0x08, 0xF8
        08 F8
   006F F8 C8 F8 68 F8 58    69 	.db	0xF8, 0xC8, 0xF8, 0x68, 0xF8, 0x58, 0xF8, 0xD8
        F8 D8
   0077 F8 38 F0 B0 C0 C0    70 	.db	0xF8, 0x38, 0xF0, 0xB0, 0xC0, 0xC0, 0xC0, 0x40
        C0 40
   007F C0 40 C0 C0 20 E0    71 	.db	0xC0, 0x40, 0xC0, 0xC0, 0x20, 0xE0, 0xE0
        E0
   0086 01                   72 	.db	1
   0087 E0                   73 	.db	0xE0
   0088 00                   74 	.db	0
                             75 ;--------------------------------------------------------
                             76 ; Home
                             77 ;--------------------------------------------------------
                             78 	.area _HOME
                             79 	.area _CODE
                             80 ;--------------------------------------------------------
                             81 ; code
                             82 ;--------------------------------------------------------
                             83 	.area _CODE
                             84 ;	spritedemo.c 12
                             85 ;	genLabel
                             86 ;	genFunction
                             87 ;	---------------------------------
                             88 ; Function main
                             89 ; ---------------------------------
   0000                      90 ___main_start:
   0000                      91 _main:
   0000 E8 FD                92 	lda	sp,-3(sp)
                             93 ;	spritedemo.c 14
                             94 ;	genIpush
                             95 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0002 21 71 00             96 	ld	hl,#__str_0
   0005 E5                   97 	push	hl
                             98 ;	genCall
   0006 CD 00 00             99 	call	_printf
   0009 E8 02               100 	lda	sp,2(sp)
                            101 ;	spritedemo.c 16
                            102 ;	genAssign
   000B 01 40 FF            103 	ld	bc,#0xFF40
                            104 ;	genAssign
                            105 ;	AOP_STK for _main_sloc0_1_0
   000E F8 01               106 	lda	hl,1(sp)
   0010 36 40               107 	ld	(hl),#0x40
   0012 23                  108 	inc	hl
   0013 36 FF               109 	ld	(hl),#0xFF
                            110 ;	genPointerGet
                            111 ;	AOP_STK for _main_sloc0_1_0
                            112 ;	AOP_STK for _main_sloc1_1_0
   0015 2B                  113 	dec	hl
   0016 5E                  114 	ld	e,(hl)
   0017 23                  115 	inc	hl
   0018 56                  116 	ld	d,(hl)
   0019 1A                  117 	ld	a,(de)
   001A 2B                  118 	dec	hl
   001B 2B                  119 	dec	hl
                            120 ;	genAnd
                            121 ;	AOP_STK for _main_sloc1_1_0
   001C 77                  122 	ld      (hl),a
   001D 7F                  123 	ld      a,a
   001E E6 FB               124 	and	a,#0xFB
                            125 ;	genAssign (pointer)
   0020 02                  126 	ld	(bc),a
                            127 ;	spritedemo.c 17
                            128 ;	genIpush
                            129 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0021 21 00 00            130 	ld	hl,#_leftwalk
   0024 E5                  131 	push	hl
                            132 ;	genIpush
   0025 21 00 08            133 	ld	hl,#0x0800
   0028 E5                  134 	push	hl
                            135 ;	genCall
   0029 CD 00 00            136 	call	_set_sprite_data
   002C E8 04               137 	lda	sp,4(sp)
                            138 ;	spritedemo.c 20
                            139 ;	genIpush
                            140 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   002E 21 00 00            141 	ld	hl,#0x0000
   0031 E5                  142 	push	hl
                            143 ;	genCall
   0032 CD 00 00            144 	call	_set_sprite_tile
   0035 E8 02               145 	lda	sp,2(sp)
                            146 ;	spritedemo.c 21
                            147 ;	genIpush
                            148 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0037 21 01 01            149 	ld	hl,#0x0101
   003A E5                  150 	push	hl
                            151 ;	genCall
   003B CD 00 00            152 	call	_set_sprite_tile
   003E E8 02               153 	lda	sp,2(sp)
                            154 ;	spritedemo.c 22
                            155 ;	genIpush
                            156 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0040 21 02 02            157 	ld	hl,#0x0202
   0043 E5                  158 	push	hl
                            159 ;	genCall
   0044 CD 00 00            160 	call	_set_sprite_tile
   0047 E8 02               161 	lda	sp,2(sp)
                            162 ;	spritedemo.c 23
                            163 ;	genIpush
                            164 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0049 21 03 03            165 	ld	hl,#0x0303
   004C E5                  166 	push	hl
                            167 ;	genCall
   004D CD 00 00            168 	call	_set_sprite_tile
   0050 E8 02               169 	lda	sp,2(sp)
                            170 ;	spritedemo.c 25
                            171 ;	genCall
                            172 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0052 CD 88 00            173 	call	_setDefaultSprite
                            174 ;	spritedemo.c 27
                            175 ;	genAssign
   0055 01 40 FF            176 	ld	bc,#0xFF40
                            177 ;	genAssign
                            178 ;	AOP_STK for _main_sloc0_1_0
   0058 F8 01               179 	lda	hl,1(sp)
   005A 36 40               180 	ld	(hl),#0x40
   005C 23                  181 	inc	hl
   005D 36 FF               182 	ld	(hl),#0xFF
                            183 ;	genPointerGet
                            184 ;	AOP_STK for _main_sloc0_1_0
                            185 ;	AOP_STK for _main_sloc1_1_0
   005F 2B                  186 	dec	hl
   0060 5E                  187 	ld	e,(hl)
   0061 23                  188 	inc	hl
   0062 56                  189 	ld	d,(hl)
   0063 1A                  190 	ld	a,(de)
   0064 2B                  191 	dec	hl
   0065 2B                  192 	dec	hl
                            193 ;	genOr
                            194 ;	AOP_STK for _main_sloc1_1_0
   0066 77                  195 	ld      (hl),a
   0067 7F                  196 	ld      a,a
   0068 F6 02               197 	or	a,#0x02
                            198 ;	genAssign (pointer)
   006A 02                  199 	ld	(bc),a
                            200 ;	spritedemo.c 29
                            201 ;	genCall
                            202 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   006B CD BD 00            203 	call	_walkLoop
                            204 ;	genLabel
   006E                     205 00101$:
                            206 ;	genEndFunction
   006E E8 03               207 	lda	sp,3(sp)
   0070 C9                  208 	ret
   0071                     209 ___main_end:
   0071                     210 __str_0:
   0071 47 61 6D 65 42 6F   211 	.ascii "GameBoy Sprite Demo!"
        79 20 53 70 72 69
        74 65 20 44 65 6D
        6F 21
   0085 0A                  212 	.db 0x0A
   0086 0A                  213 	.db 0x0A
   0087 00                  214 	.db 0x00
                            215 ;	spritedemo.c 32
                            216 ;	genLabel
                            217 ;	genFunction
                            218 ;	---------------------------------
                            219 ; Function setDefaultSprite
                            220 ; ---------------------------------
   0088                     221 ___setDefaultSprite_start:
   0088                     222 _setDefaultSprite:
                            223 	
                            224 ;	spritedemo.c 34
                            225 ;	genIpush
                            226 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0088 21 4B 4B            227 	ld	hl,#0x4B4B
   008B E5                  228 	push	hl
                            229 ;	genIpush
   008C 3E 00               230 	ld	a,#0x00
   008E F5                  231 	push	af
   008F 33                  232 	inc	sp
                            233 ;	genCall
   0090 CD 00 00            234 	call	_move_sprite
   0093 E8 03               235 	lda	sp,3(sp)
                            236 ;	spritedemo.c 37
                            237 ;	genIpush
                            238 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0095 21 4B 53            239 	ld	hl,#0x534B
   0098 E5                  240 	push	hl
                            241 ;	genIpush
   0099 3E 01               242 	ld	a,#0x01
   009B F5                  243 	push	af
   009C 33                  244 	inc	sp
                            245 ;	genCall
   009D CD 00 00            246 	call	_move_sprite
   00A0 E8 03               247 	lda	sp,3(sp)
                            248 ;	spritedemo.c 40
                            249 ;	genIpush
                            250 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00A2 21 53 4B            251 	ld	hl,#0x4B53
   00A5 E5                  252 	push	hl
                            253 ;	genIpush
   00A6 3E 02               254 	ld	a,#0x02
   00A8 F5                  255 	push	af
   00A9 33                  256 	inc	sp
                            257 ;	genCall
   00AA CD 00 00            258 	call	_move_sprite
   00AD E8 03               259 	lda	sp,3(sp)
                            260 ;	spritedemo.c 43
                            261 ;	genIpush
                            262 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00AF 21 53 53            263 	ld	hl,#0x5353
   00B2 E5                  264 	push	hl
                            265 ;	genIpush
   00B3 3E 03               266 	ld	a,#0x03
   00B5 F5                  267 	push	af
   00B6 33                  268 	inc	sp
                            269 ;	genCall
   00B7 CD 00 00            270 	call	_move_sprite
   00BA E8 03               271 	lda	sp,3(sp)
                            272 ;	genLabel
   00BC                     273 00101$:
                            274 ;	genEndFunction
                            275 	
   00BC C9                  276 	ret
   00BD                     277 ___setDefaultSprite_end:
                            278 ;	spritedemo.c 48
                            279 ;	genLabel
                            280 ;	genFunction
                            281 ;	---------------------------------
                            282 ; Function walkLoop
                            283 ; ---------------------------------
   00BD                     284 ___walkLoop_start:
   00BD                     285 _walkLoop:
                            286 	
                            287 ;	spritedemo.c 51
                            288 ;	genLabel
   00BD                     289 00104$:
                            290 ;	spritedemo.c 52
                            291 ;	genCall
                            292 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00BD CD 00 00            293 	call	_joypad
   00C0 4B                  294 	ld	c,e
                            295 ;	genAssign
                            296 ;	(registers are the same)
                            297 ;	spritedemo.c 54
                            298 ;	genCmpEq
                            299 ; genCmpEq: left 1, right 1, result 0
   00C1 79                  300 	ld	a,c
   00C2 FE 02               301 	cp	a,#0x02
   00C4 C2 02 01            302 	jp	nz,00102$
   00C7 18 03               303 	jr	00111$
   00C9                     304 00110$:
   00C9 C3 02 01            305 	jp	00102$
   00CC                     306 00111$:
                            307 ;	spritedemo.c 56
                            308 ;	genIpush
                            309 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00CC 21 01 05            310 	ld	hl,#0x0501
   00CF E5                  311 	push	hl
                            312 ;	genCall
   00D0 CD 00 00            313 	call	_set_sprite_tile
   00D3 E8 02               314 	lda	sp,2(sp)
                            315 ;	spritedemo.c 57
                            316 ;	genIpush
                            317 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00D5 21 03 07            318 	ld	hl,#0x0703
   00D8 E5                  319 	push	hl
                            320 ;	genCall
   00D9 CD 00 00            321 	call	_set_sprite_tile
   00DC E8 02               322 	lda	sp,2(sp)
                            323 ;	spritedemo.c 58
                            324 ;	genIpush
                            325 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00DE 21 F0 00            326 	ld	hl,#0x00F0
   00E1 E5                  327 	push	hl
                            328 ;	genCall
   00E2 CD 00 00            329 	call	_delay
   00E5 E8 02               330 	lda	sp,2(sp)
                            331 ;	spritedemo.c 61
                            332 ;	genIpush
                            333 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00E7 21 01 01            334 	ld	hl,#0x0101
   00EA E5                  335 	push	hl
                            336 ;	genCall
   00EB CD 00 00            337 	call	_set_sprite_tile
   00EE E8 02               338 	lda	sp,2(sp)
                            339 ;	spritedemo.c 62
                            340 ;	genIpush
                            341 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00F0 21 03 03            342 	ld	hl,#0x0303
   00F3 E5                  343 	push	hl
                            344 ;	genCall
   00F4 CD 00 00            345 	call	_set_sprite_tile
   00F7 E8 02               346 	lda	sp,2(sp)
                            347 ;	spritedemo.c 63
                            348 ;	genIpush
                            349 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00F9 21 F0 00            350 	ld	hl,#0x00F0
   00FC E5                  351 	push	hl
                            352 ;	genCall
   00FD CD 00 00            353 	call	_delay
   0100 E8 02               354 	lda	sp,2(sp)
                            355 ;	genLabel
   0102                     356 00102$:
                            357 ;	spritedemo.c 66
                            358 ;	genIpush
                            359 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0102 21 14 00            360 	ld	hl,#0x0014
   0105 E5                  361 	push	hl
                            362 ;	genCall
   0106 CD 00 00            363 	call	_delay
   0109 E8 02               364 	lda	sp,2(sp)
                            365 ;	genGoto
   010B C3 BD 00            366 	jp	00104$
                            367 ;	genLabel
   010E                     368 00106$:
                            369 ;	genEndFunction
                            370 	
   010E C9                  371 	ret
   010F                     372 ___walkLoop_end:
                            373 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  0 ___main_end                        0071 R
  0 ___main_start                      0000 R
  0 ___setDefaultSprite_end            00BD R
  0 ___setDefaultSprite_start          0088 R
  0 ___walkLoop_end                    010F R
  0 ___walkLoop_start                  00BD R
    __initrleblock                     **** GX
  0 __str_0                            0071 R
    _delay                             **** GX
    _joypad                            **** GX
  1 _leftwalk                          0000 GR
  0 _main                              0000 GR
    _move_sprite                       **** GX
    _printf                            **** GX
  0 _setDefaultSprite                  0088 GR
    _set_sprite_data                   **** GX
    _set_sprite_tile                   **** GX
  0 _walkLoop                          00BD GR

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size  10F   flags 0
   1 _DATA                              size   80   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size   89   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
